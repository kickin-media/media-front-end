/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Status */
        get: operations["get_status_status_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/event/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Events */
        get: operations["list_events_event__get"];
        put?: never;
        /** Create Event */
        post: operations["create_event_event__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/event/{event_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Event */
        get: operations["get_event_event__event_id__get"];
        /** Update Event */
        put: operations["update_event_event__event_id__put"];
        post?: never;
        /** Delete Event */
        delete: operations["delete_event_event__event_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/event/{event_id}/albums": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Event Albums */
        get: operations["get_event_albums_event__event_id__albums_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/event/{event_id}/watermark": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Event Watermark */
        get: operations["get_event_watermark_event__event_id__watermark_get"];
        put?: never;
        /** Create Event Watermark Upload */
        post: operations["create_event_watermark_upload_event__event_id__watermark_post"];
        /** Delete Event Watermark */
        delete: operations["delete_event_watermark_event__event_id__watermark_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/album/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Albums */
        get: operations["list_albums_album__get"];
        put?: never;
        /** Create Album */
        post: operations["create_album_album__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/album/{album_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Album */
        get: operations["get_album_album__album_id__get"];
        /** Update Album */
        put: operations["update_album_album__album_id__put"];
        post?: never;
        /** Delete Album */
        delete: operations["delete_album_album__album_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/album/{album_id}/hidden": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Album Hidden Status */
        put: operations["update_album_hidden_status_album__album_id__hidden_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/album/{album_id}/cover": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Album Cover */
        put: operations["update_album_cover_album__album_id__cover_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/album/{album_id}/empty": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Empty Album */
        delete: operations["empty_album_album__album_id__empty_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/album/{album_id}/view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Increase Viewcount */
        put: operations["increase_viewcount_album__album_id__view_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photo/stream": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Event Photo Stream */
        get: operations["get_event_photo_stream_photo_stream_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photo/unprocessed": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Unprocessed Photos */
        get: operations["get_unprocessed_photos_photo_unprocessed_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photo/{photo_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Photo */
        get: operations["get_photo_photo__photo_id__get"];
        put?: never;
        post?: never;
        /** Delete Photo */
        delete: operations["delete_photo_photo__photo_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photo/{photo_id}/event": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Photo Event */
        get: operations["get_photo_event_photo__photo_id__event_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photo/{photo_id}/exif/{photo_exif_secret}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Finalize Upload */
        post: operations["finalize_upload_photo__photo_id__exif__photo_exif_secret__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photo/{photo_id}/original": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Original Photo */
        get: operations["get_original_photo_photo__photo_id__original_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photo/{photo_id}/original_upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Original Photo Upload */
        get: operations["get_original_photo_upload_photo__photo_id__original_upload_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photo/{photo_id}/reprocess": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Reprocess Photo */
        post: operations["reprocess_photo_photo__photo_id__reprocess_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photo/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Upload */
        post: operations["create_upload_photo__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photo/{photo_id}/albums": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Replace Albums */
        put: operations["replace_albums_photo__photo_id__albums_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photo/{photo_id}/view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Increase Viewcount */
        put: operations["increase_viewcount_photo__photo_id__view_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/author/{author_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Author Data */
        get: operations["get_author_data_author__author_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/author/{author_id}/photos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Author Photos */
        get: operations["get_author_photos_author__author_id__photos_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/author/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Author Data */
        put: operations["update_author_data_author__put"];
        post?: never;
        /** Delete Author Data */
        delete: operations["delete_author_data_author__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AlbumCreate */
        AlbumCreate: {
            /** Name */
            name: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            /**
             * Release Time
             * Format: date-time
             */
            release_time?: string;
            /** Event Id */
            event_id: string;
            /** Cover Id */
            cover_id?: string;
        };
        /** AlbumReadList */
        AlbumReadList: {
            /** Name */
            name: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            /**
             * Release Time
             * Format: date-time
             */
            release_time?: string;
            /** Event Id */
            event_id: string;
            /** Cover Id */
            cover_id?: string;
            /** Id */
            id: string;
            /** Photos Count */
            photos_count: number;
            cover_photo?: components["schemas"]["PhotoReadSingleStub"];
            /** Hidden Secret */
            hidden_secret?: string;
            /** Views */
            views: number;
        };
        /** AlbumReadSingle */
        AlbumReadSingle: {
            /** Name */
            name: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            /**
             * Release Time
             * Format: date-time
             */
            release_time?: string;
            /** Event Id */
            event_id: string;
            /** Cover Id */
            cover_id?: string;
            /** Id */
            id: string;
            /** Photos Count */
            photos_count: number;
            cover_photo?: components["schemas"]["PhotoReadSingleStub"];
            /** Hidden Secret */
            hidden_secret?: string;
            /** Views */
            views: number;
            event: components["schemas"]["models__album__AlbumReadSingleStub__Event"];
            /** Photos */
            photos: components["schemas"]["PhotoReadSingleStub"][];
        };
        /** AlbumReadSingleStub */
        AlbumReadSingleStub: {
            /** Name */
            name: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            /**
             * Release Time
             * Format: date-time
             */
            release_time?: string;
            /** Event Id */
            event_id: string;
            /** Cover Id */
            cover_id?: string;
            /** Id */
            id: string;
            /** Photos Count */
            photos_count: number;
            cover_photo?: components["schemas"]["PhotoReadSingleStub"];
            /** Hidden Secret */
            hidden_secret?: string;
            /** Views */
            views: number;
            event: components["schemas"]["models__album__AlbumReadSingleStub__Event"];
        };
        /** AlbumSetCover */
        AlbumSetCover: {
            /** Photo Id */
            photo_id?: string;
        };
        /** AlbumSetSecretStatus */
        AlbumSetSecretStatus: {
            /** Is Secret */
            is_secret: boolean;
            /** Refresh Secret */
            refresh_secret: boolean;
        };
        /** Author */
        Author: {
            /** Name */
            name: string;
            /** Id */
            id?: string;
        };
        /** AuthorCreate */
        AuthorCreate: {
            /** Name */
            name: string;
        };
        /** AuthorReadSingle */
        AuthorReadSingle: {
            /** Name */
            name: string;
            /** Id */
            id: string;
            /** Photos Count */
            photos_count: number;
        };
        /** EventCreate */
        EventCreate: {
            /** Name */
            name: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            /** Locked */
            locked: boolean;
        };
        /** EventReadList */
        EventReadList: {
            /** Name */
            name: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            /** Locked */
            locked: boolean;
            /** Id */
            id: string;
        };
        /** EventReadSingle */
        EventReadSingle: {
            /** Name */
            name: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            /** Locked */
            locked: boolean;
            /** Id */
            id: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** OriginalPhotoDownload */
        OriginalPhotoDownload: {
            /** Download Url */
            download_url: string;
        };
        /** PhotoImgUrls */
        PhotoImgUrls: {
            /** Original */
            original: string;
            /** Large */
            large: string;
            /** Medium */
            medium: string;
            /** Small */
            small: string;
        };
        /** PhotoReadList */
        PhotoReadList: {
            /** Id */
            id: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
            img_urls: components["schemas"]["PhotoImgUrls"];
            /** Upload Processed */
            upload_processed: boolean;
            /**
             * Uploaded At
             * Format: date-time
             */
            uploaded_at: string;
            /** Views */
            views: number;
        };
        /** PhotoReadSingle */
        PhotoReadSingle: {
            /** Id */
            id: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
            img_urls: components["schemas"]["PhotoImgUrls"];
            /** Upload Processed */
            upload_processed: boolean;
            /**
             * Uploaded At
             * Format: date-time
             */
            uploaded_at: string;
            /** Views */
            views: number;
            author: components["schemas"]["Author"];
            /** Exif */
            exif: Record<string, never>;
            /** Albums */
            albums: components["schemas"]["models__photo__PhotoReadSingle__Album"][];
            /** Gps Thumb */
            gps_thumb?: string;
            /** Gps Lat */
            gps_lat?: number;
            /** Gps Lon */
            gps_lon?: number;
        };
        /** PhotoReadSingleStub */
        PhotoReadSingleStub: {
            /** Id */
            id: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
            img_urls: components["schemas"]["PhotoImgUrls"];
            /** Upload Processed */
            upload_processed: boolean;
            /**
             * Uploaded At
             * Format: date-time
             */
            uploaded_at: string;
            /** Views */
            views: number;
            author: components["schemas"]["Author"];
        };
        /** PhotoStream */
        PhotoStream: {
            /** Photos */
            photos: components["schemas"]["PhotoReadList"][];
            /** Next Photo Id */
            next_photo_id: string;
            /** Next Timestamp */
            next_timestamp: string;
        };
        /** PhotoUploadPreSignedUrl */
        PhotoUploadPreSignedUrl: {
            /** Url */
            url: string;
            fields: components["schemas"]["PhotoUploadPreSignedUrlFields"];
        };
        /** PhotoUploadPreSignedUrlFields */
        PhotoUploadPreSignedUrlFields: {
            /** Key */
            key: string;
            /** Awsaccesskeyid */
            AWSAccessKeyId: string;
            /** Policy */
            policy: string;
            /** Signature */
            signature: string;
        };
        /** PhotoUploadResponse */
        PhotoUploadResponse: {
            /** Photo Id */
            photo_id: string;
            pre_signed_url: components["schemas"]["PhotoUploadPreSignedUrl"];
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** Album */
        models__album__Album: {
            /** Name */
            name: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            /**
             * Release Time
             * Format: date-time
             */
            release_time?: string;
            /** Event Id */
            event_id: string;
            /** Cover Id */
            cover_id?: string;
            /** Id */
            id?: string;
            /** Hidden Secret */
            hidden_secret?: string;
            /**
             * Views
             * @default 0
             */
            views: number;
        };
        /** Event */
        models__album__AlbumReadSingleStub__Event: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
        };
        /** Event */
        models__event__Event: {
            /** Name */
            name: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            /** Locked */
            locked: boolean;
            /** Id */
            id?: string;
        };
        /** Album */
        models__photo__PhotoReadSingle__Album: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            cover_photo?: components["schemas"]["PhotoReadSingleStub"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_status_status_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    list_events_event__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventReadList"][];
                };
            };
        };
    };
    create_event_event__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EventCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["models__event__Event"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_event_event__event_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                event_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventReadSingle"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_event_event__event_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                event_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EventCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["models__event__Event"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_event_event__event_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                event_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_event_albums_event__event_id__albums_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                event_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AlbumReadList"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_event_watermark_event__event_id__watermark_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                event_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_event_watermark_upload_event__event_id__watermark_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                event_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PhotoUploadPreSignedUrl"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_event_watermark_event__event_id__watermark_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                event_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PhotoUploadPreSignedUrl"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_albums_album__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AlbumReadList"][];
                };
            };
        };
    };
    create_album_album__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AlbumCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["models__album__Album"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_album_album__album_id__get: {
        parameters: {
            query?: {
                secret?: string;
            };
            header?: never;
            path: {
                album_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AlbumReadSingle"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_album_album__album_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                album_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AlbumCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["models__album__Album"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_album_album__album_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                album_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_album_hidden_status_album__album_id__hidden_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                album_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AlbumSetSecretStatus"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AlbumReadSingleStub"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_album_cover_album__album_id__cover_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                album_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AlbumSetCover"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AlbumReadSingleStub"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    empty_album_album__album_id__empty_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                album_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AlbumReadSingleStub"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    increase_viewcount_album__album_id__view_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                album_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_event_photo_stream_photo_stream_get: {
        parameters: {
            query?: {
                timestamp?: string;
                photo_id_start?: string;
                direction?: string;
                sort_by?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PhotoStream"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_unprocessed_photos_photo_unprocessed_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PhotoReadList"][];
                };
            };
        };
    };
    get_photo_photo__photo_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                photo_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PhotoReadSingle"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_photo_photo__photo_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                photo_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_photo_event_photo__photo_id__event_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                photo_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventReadSingle"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    finalize_upload_photo__photo_id__exif__photo_exif_secret__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                photo_id: string;
                photo_exif_secret: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_original_photo_photo__photo_id__original_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                photo_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OriginalPhotoDownload"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_original_photo_upload_photo__photo_id__original_upload_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                photo_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OriginalPhotoDownload"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    reprocess_photo_photo__photo_id__reprocess_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                photo_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_upload_photo__post: {
        parameters: {
            query?: {
                num_uploads?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PhotoUploadResponse"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    replace_albums_photo__photo_id__albums_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                photo_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": string[];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PhotoReadSingleStub"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    increase_viewcount_photo__photo_id__view_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                photo_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_author_data_author__author_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                author_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuthorReadSingle"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_author_photos_author__author_id__photos_get: {
        parameters: {
            query?: {
                page?: number;
            };
            header?: never;
            path: {
                author_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PhotoReadList"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_author_data_author__put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AuthorCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Author"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_author_data_author__delete: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
